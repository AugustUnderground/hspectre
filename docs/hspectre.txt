-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/augustunderground/hspectre#readme</a>
@package hspectre
@version 0.1.0.0


-- | Communication Between Haskell and Spectre
module Spectre

-- | Available Simulation Analyses
data Analysis

-- | AC Analysis
AC :: Analysis

-- | DC Analysis
DC :: Analysis

-- | Offset Analysis
DCMATCH :: Analysis

-- | Stability Analysis
STB :: Analysis

-- | Transient Analysis
TRAN :: Analysis

-- | Noise Analysis
NOISE :: Analysis

-- | XF Analysis
XF :: Analysis

-- | Get Spectre Version
version :: IO String

-- | Simulate a netlist non interactively and return simulation results
simulate :: [String] -> String -> IO NutMeg
instance GHC.Classes.Eq Spectre.Analysis
instance GHC.Show.Show Spectre.Analysis
instance GHC.Read.Read Spectre.Analysis


-- | Communication Between Haskell and Spectre
module Spectre.Interactive

-- | Spectre Interactive Session
data Session
Session :: Pty -> FilePath -> Session
[pty] :: Session -> Pty
[dir] :: Session -> FilePath

-- | Name of a netlist Parameter
type Parameter = String

-- | Initialize spectre session with given include path, netlist and temp
--   dir
startSession :: [FilePath] -> FilePath -> FilePath -> IO Session

-- | Initialize spectre session with given include path and netlist
startSession' :: [FilePath] -> FilePath -> IO Session

-- | Close a spectre interactive session
stopSession :: Session -> IO ()

-- | Run all simulation analyses
runAll :: Session -> IO NutMeg

-- | Get Map of Available Simulation Analyses: (id, type)
listAnalysis :: Session -> IO (Map String Analysis)

-- | Run Selected Analysis only
runAnalysis :: Session -> Analysis -> IO NutMeg

-- | Get Netlist Parameter
getParameter :: Session -> Parameter -> IO Double

-- | Set Netlist Parameter
setParameter :: Session -> Parameter -> Double -> IO ()

-- | Get a list of Parameters as Map
getParameters :: Session -> [Parameter] -> IO (Map Parameter Double)

-- | Get a list of Parameters
setParameters :: Session -> Map Parameter Double -> IO (Map Parameter ())
